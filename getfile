class File():
	def __init__(self):
		""" 
		image_list är alla bilder i image-mappen som har hittats av
		get_file()
		"""
		self.image_list = list()
		
		"""
		loaded_images_dict är ett dict med alla bilder som har pygame.image.load:ats
		"""
		self.loaded_images_dict = dict()
		
		self.map_dict = dict()
	
	"""
	 Söker igenom my_dir (ange alltså directory som argument).
	 Lagrar filer i listor, just nu
	 .png-filer i self.image_dict
	 .tmx-filer i self.map_dict
	"""
	def get_files(self, my_dir):
 		file_list = next(os.walk(str(my_dir)))[2]
 		print(file_list)
		for found_file in file_list:
			if not found_file in self.image_list:
				if ".png" in found_file:
					self.image_list.append(found_file)
				if ".tmx" in found_file:
					self.map_dict.append(str(found_file))
	"""				
	 Denna metod kallas för att få tag i rätt map utifrån, metoden kallas med map:ens filnamn som argument.
	 Funkar med och utan string-formatering.
	"""
	def get_map(self, map_to_get):
		for map_item in self.map_dict:
			if map_item == str(map_to_get):
				return map_to_get
			else:
				print("Map not found!")
				
	""" 
	 Denna metod kan kallas utifrån för att få tag i rätt bild, kan kallas med eller utan string-formatering. 
	 Det är filnamnet som ska vara argument.
	 Den laddar alla bilder 1(!) gång med convert_alpha() och sedan gör den inte det igen,
	 för att undvika onödiga laddningar. 
	"""
	def get_image(self, file_name):
		if str(file_name) in loaded_images_dict:
			return loaded_images_dict[str(file_name)]
		if not str(file_name) in loaded_images_dict:
			image = pygame.image.load(str(file_name)).convert_alpha()
			loaded_images_dict[str(file_name)] = image
			return loaded_images_dict[str(file_name)]
			
file = File()
